/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/milestones/': RouteRecordInfo<'/milestones/', '/milestones', Record<never, never>, Record<never, never>>,
    '/milestones/_components/CardList': RouteRecordInfo<'/milestones/_components/CardList', '/milestones/_components/CardList', Record<never, never>, Record<never, never>>,
    '/milestones/_components/DoubleLineList': RouteRecordInfo<'/milestones/_components/DoubleLineList', '/milestones/_components/DoubleLineList', Record<never, never>, Record<never, never>>,
    '/milestones/_components/MileStoneList': RouteRecordInfo<'/milestones/_components/MileStoneList', '/milestones/_components/MileStoneList', Record<never, never>, Record<never, never>>,
    '/milestones/[id]/': RouteRecordInfo<'/milestones/[id]/', '/milestones/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/milestones/add/': RouteRecordInfo<'/milestones/add/', '/milestones/add', Record<never, never>, Record<never, never>>,
    '/setting/': RouteRecordInfo<'/setting/', '/setting', Record<never, never>, Record<never, never>>,
    '/tasks/': RouteRecordInfo<'/tasks/', '/tasks', Record<never, never>, Record<never, never>>,
    '/tasks/[id]/': RouteRecordInfo<'/tasks/[id]/', '/tasks/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/tasks/add/': RouteRecordInfo<'/tasks/add/', '/tasks/add', Record<never, never>, Record<never, never>>,
    '/tasks/add/_components/addForm': RouteRecordInfo<'/tasks/add/_components/addForm', '/tasks/add/_components/addForm', Record<never, never>, Record<never, never>>,
    '/tasks/add/_components/addSubItem': RouteRecordInfo<'/tasks/add/_components/addSubItem', '/tasks/add/_components/addSubItem', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/milestones/index.vue': {
      routes: '/milestones/'
      views: never
    }
    'src/pages/milestones/_components/CardList.vue': {
      routes: '/milestones/_components/CardList'
      views: never
    }
    'src/pages/milestones/_components/DoubleLineList.vue': {
      routes: '/milestones/_components/DoubleLineList'
      views: never
    }
    'src/pages/milestones/_components/MileStoneList.vue': {
      routes: '/milestones/_components/MileStoneList'
      views: never
    }
    'src/pages/milestones/[id]/index.vue': {
      routes: '/milestones/[id]/'
      views: never
    }
    'src/pages/milestones/add/index.vue': {
      routes: '/milestones/add/'
      views: never
    }
    'src/pages/setting/index.vue': {
      routes: '/setting/'
      views: never
    }
    'src/pages/tasks/index.vue': {
      routes: '/tasks/'
      views: never
    }
    'src/pages/tasks/[id]/index.vue': {
      routes: '/tasks/[id]/'
      views: never
    }
    'src/pages/tasks/add/index.vue': {
      routes: '/tasks/add/'
      views: never
    }
    'src/pages/tasks/add/_components/addForm.vue': {
      routes: '/tasks/add/_components/addForm'
      views: never
    }
    'src/pages/tasks/add/_components/addSubItem.vue': {
      routes: '/tasks/add/_components/addSubItem'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
